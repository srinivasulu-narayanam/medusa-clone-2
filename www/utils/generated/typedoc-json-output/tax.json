{
	"id": 15906,
	"name": "tax",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 16283,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16284,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 16285,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 16286,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 16287,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 16283,
										"name": "FindConfigOrder",
										"package": "@srinivasulu-narayanam/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 16070,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 16071,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 16079,
										"name": "Entity",
										"package": "@srinivasulu-narayanam/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 16072,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16073,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16074,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 16075,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16283,
						"name": "FindConfigOrder",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16076,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16077,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 16078,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16071,
						16072,
						16073,
						16074,
						16075,
						16076,
						16077,
						16078
					]
				}
			],
			"typeParameters": [
				{
					"id": 16079,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 16328,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 16302,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 16303,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16305,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16305,
									"name": "T",
									"package": "@srinivasulu-narayanam/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 16304,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16305,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16305,
									"name": "T",
									"package": "@srinivasulu-narayanam/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16303,
						16304
					]
				}
			],
			"typeParameters": [
				{
					"id": 16305,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 16106,
					"name": "FilterableTaxRateProps"
				},
				{
					"type": "reference",
					"target": 16173,
					"name": "FilterableTaxRegionProps"
				},
				{
					"type": "reference",
					"target": 16201,
					"name": "FilterableTaxRateRuleProps"
				}
			]
		},
		{
			"id": 16255,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 16256,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16257,
							"name": "TReturnableLinkableKeys",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16256
					]
				}
			],
			"typeParameters": [
				{
					"id": 16257,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 16144,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 16145,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16146,
							"name": "TReturnableLinkableKeys",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16145
					]
				}
			],
			"typeParameters": [
				{
					"id": 16146,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 16381,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16382,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 16382,
					"name": "T",
					"package": "@srinivasulu-narayanam/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 16382,
						"name": "T",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 16418,
						"name": "Scalar",
						"package": "@srinivasulu-narayanam/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 16422,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16382,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 16425,
					"typeArguments": [
						{
							"type": "reference",
							"target": 16382,
							"name": "T",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@srinivasulu-narayanam/types"
				}
			}
		},
		{
			"id": 16383,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16384,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 16384,
							"name": "T",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 16384,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 16384,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 16418,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16419,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16420,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 16421,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										16420
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16456,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16457,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 16457,
					"name": "T",
					"package": "@srinivasulu-narayanam/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 16457,
							"name": "T",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 16457,
					"name": "T",
					"package": "@srinivasulu-narayanam/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 16446,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16455,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 16455,
					"name": "T",
					"package": "@srinivasulu-narayanam/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 16447,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 16448,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									16448
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 16456,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@srinivasulu-narayanam/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 16455,
						"name": "T",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 16449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16450,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16450
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 16456,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 16455,
							"name": "T",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 16451,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 16452,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											16452
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 16456,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@srinivasulu-narayanam/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@srinivasulu-narayanam/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 16455,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 16453,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16454,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16454
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 16456,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@srinivasulu-narayanam/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 16306,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16327,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16307,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16308,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16381,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16327,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@srinivasulu-narayanam/types"
								}
							}
						},
						{
							"id": 16309,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16381,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16327,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@srinivasulu-narayanam/types"
								}
							}
						},
						{
							"id": 16310,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 16383,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16327,
												"name": "T",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@srinivasulu-narayanam/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16383,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16327,
													"name": "T",
													"package": "@srinivasulu-narayanam/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								]
							}
						},
						{
							"id": 16311,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16383,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16312,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16383,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16327,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@srinivasulu-narayanam/types"
								}
							}
						},
						{
							"id": 16313,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16383,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16327,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@srinivasulu-narayanam/types"
								}
							}
						},
						{
							"id": 16314,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16381,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16315,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16383,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16316,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16383,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16317,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16383,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16318,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16383,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16327,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16319,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16320,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16321,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16322,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16323,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 16324,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 16325,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 16326,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16308,
								16309,
								16310,
								16311,
								16312,
								16313,
								16314,
								16315,
								16316,
								16317,
								16318,
								16319,
								16320,
								16321,
								16322,
								16323,
								16324,
								16325,
								16326
							]
						}
					]
				}
			}
		},
		{
			"id": 16443,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16444,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 16444,
						"name": "T",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 16383,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16444,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "reference",
						"target": 16446,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16444,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@srinivasulu-narayanam/types"
					}
				]
			}
		},
		{
			"id": 16425,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16426,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16443,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16426,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@srinivasulu-narayanam/types"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "reference",
						"target": 16443,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16426,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16443,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16426,
									"name": "T",
									"package": "@srinivasulu-narayanam/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@srinivasulu-narayanam/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 16445,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 16437,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16441,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 16442,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 16441,
						"name": "T",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 16441,
							"name": "T",
							"package": "@srinivasulu-narayanam/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@srinivasulu-narayanam/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 16441,
									"name": "T",
									"package": "@srinivasulu-narayanam/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 16441,
											"name": "T",
											"package": "@srinivasulu-narayanam/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 16441,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 16438,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 16439,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 16440,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@srinivasulu-narayanam/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 16422,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@srinivasulu-narayanam/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 16442,
												"name": "Prev",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 16445,
												"name": "PrevLimit",
												"package": "@srinivasulu-narayanam/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@srinivasulu-narayanam/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 16422,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16423,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 16424,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 16424,
					"name": "Prev",
					"package": "@srinivasulu-narayanam/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 16423,
						"name": "T",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 16430,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@srinivasulu-narayanam/types"
					},
					"trueType": {
						"type": "reference",
						"target": 16437,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 16424,
								"name": "Prev",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@srinivasulu-narayanam/types"
					},
					"falseType": {
						"type": "reference",
						"target": 16437,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16423,
								"name": "T",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 16424,
								"name": "Prev",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@srinivasulu-narayanam/types"
					}
				}
			}
		},
		{
			"id": 16427,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16428,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16429,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16429
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16412,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16417,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16413,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16414,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16415,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 16427,
								"name": "EventMetadata",
								"package": "@srinivasulu-narayanam/types"
							}
						},
						{
							"id": 16416,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16417,
								"name": "TData",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16414,
								16415,
								16416
							]
						}
					]
				}
			}
		},
		{
			"id": 16360,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16363,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 16412,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16363,
								"name": "TData",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16361,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16362,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16362
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16371,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16380,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16372,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16373,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16374,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16380,
								"name": "TData",
								"package": "@srinivasulu-narayanam/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 16375,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16376,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16377,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16378,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 16379,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16373,
								16374,
								16375,
								16376,
								16377,
								16378,
								16379
							]
						}
					]
				}
			}
		},
		{
			"id": 16402,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16403,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16404,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16405,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16406,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16407,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16408,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16409,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 16410,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 16411,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16404,
								16405,
								16406,
								16407,
								16408,
								16409,
								16410,
								16411
							]
						}
					]
				}
			}
		},
		{
			"id": 16398,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16399,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 16400,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16401,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16399,
						16400,
						16401
					]
				}
			]
		},
		{
			"id": 16336,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16337,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16338,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 16398,
								"name": "JoinerServiceConfigAlias",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 16398,
									"name": "JoinerServiceConfigAlias",
									"package": "@srinivasulu-narayanam/types"
								}
							}
						]
					}
				},
				{
					"id": 16339,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 16340,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16341,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16342,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16341,
														16342
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 16343,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 16344,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16402,
							"name": "JoinerRelationship",
							"package": "@srinivasulu-narayanam/types"
						}
					}
				},
				{
					"id": 16345,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 16346,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 16347,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 16348,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 16349,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 16402,
											"name": "JoinerRelationship",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											16347,
											16348,
											16349
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 16350,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16337,
						16338,
						16339,
						16343,
						16344,
						16345,
						16350
					]
				}
			]
		},
		{
			"id": 16430,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 16436,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16431,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 16432,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 16435,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 16436,
										"name": "T",
										"package": "@srinivasulu-narayanam/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 16433,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"signatures": [
												{
													"id": 16434,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16436,
														"name": "T",
														"package": "@srinivasulu-narayanam/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 16354,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16355,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16356,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 16357,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16358,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16359,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16356,
										16357,
										16358,
										16359
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 16258,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 16336,
								"name": "JoinerServiceConfig",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16259,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16260,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16261,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16351,
											"name": "ModuleJoinerRelationship",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 16262,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 16263,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 16264,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 16265,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 16266,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 16267,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 16268,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 16269,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 16270,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							16268,
																							16269,
																							16270
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 16271,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 16351,
															"name": "ModuleJoinerRelationship",
															"package": "@srinivasulu-narayanam/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															16264,
															16265,
															16266,
															16271
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 16272,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16273,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16274,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16275,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 16276,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 16277,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16278,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16279,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16280,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16281,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16282,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 16354,
														"name": "LinkModulesExtraFields",
														"package": "@srinivasulu-narayanam/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16280,
														16281,
														16282
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16260,
										16261,
										16262,
										16272,
										16273,
										16274,
										16275,
										16276,
										16277,
										16278
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16351,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 16402,
						"name": "JoinerRelationship",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16352,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16353,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16353
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16056,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16057,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 16058,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"type": {
								"type": "reference",
								"target": 16258,
								"name": "ModuleJoinerConfig",
								"package": "@srinivasulu-narayanam/types"
							}
						}
					]
				},
				{
					"id": 16059,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16060,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16061,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16062,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 16063,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 16064,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16065,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 16066,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 16067,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16068,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 16069,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16061,
										16064,
										16067
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16059
					]
				},
				{
					"title": "Methods",
					"children": [
						16057
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 15907,
					"name": "ITaxModuleService"
				}
			]
		},
		{
			"id": 16364,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16365,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 16366,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16367,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 16368,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 16369,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 16370,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16365,
						16366,
						16370
					]
				}
			]
		},
		{
			"id": 16288,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16289,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16290,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16291,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 16360,
												"name": "Message",
												"package": "@srinivasulu-narayanam/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16360,
													"name": "Message",
													"package": "@srinivasulu-narayanam/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 16292,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16293,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16294,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 16364,
										"name": "MessageAggregatorFormat",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16360,
											"name": "Message",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16295,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16296,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 16297,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16298,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 16299,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 16300,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 16371,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16299,
														"name": "T",
														"package": "@srinivasulu-narayanam/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@srinivasulu-narayanam/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16371,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16299,
															"name": "T",
															"package": "@srinivasulu-narayanam/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@srinivasulu-narayanam/types"
												}
											}
										]
									}
								},
								{
									"id": 16301,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						16289,
						16292,
						16295,
						16297
					]
				}
			]
		},
		{
			"id": 16093,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 16094,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 16095,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16105,
						"name": "TManager",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 16096,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16105,
						"name": "TManager",
						"package": "@srinivasulu-narayanam/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 16097,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16098,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16099,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16100,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16101,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16288,
						"name": "IMessageAggregator",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16102,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16103,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16104,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16094,
						16095,
						16096,
						16097,
						16098,
						16099,
						16100,
						16101,
						16102,
						16103,
						16104
					]
				}
			],
			"typeParameters": [
				{
					"id": 16105,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 16080,
			"name": "TaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate details."
					}
				]
			},
			"children": [
				{
					"id": 16081,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16082,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16083,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code the tax rate is identified by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16084,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Tax Rate."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nVAT\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16085,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16086,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16087,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate should be combined with parent rates.\n\nLearn more [here](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#combinable-tax-rates)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16088,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is the default rate for the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16089,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16090,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16091,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16092,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the ID of the user that created the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16081,
						16082,
						16083,
						16084,
						16085,
						16086,
						16087,
						16088,
						16089,
						16090,
						16091,
						16092
					]
				}
			]
		},
		{
			"id": 16106,
			"name": "FilterableTaxRateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax rates."
					}
				]
			},
			"children": [
				{
					"id": 16116,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16106,
									"name": "FilterableTaxRateProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16106,
											"name": "FilterableTaxRateProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16303,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 16117,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16106,
									"name": "FilterableTaxRateProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16106,
											"name": "FilterableTaxRateProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16304,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 16107,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find tax rates based on name and code properties through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16108,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the tax rates by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 16109,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their associated tax regions."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 16110,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						]
					}
				},
				{
					"id": 16111,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16112,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16113,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16114,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16115,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16116,
						16117,
						16107,
						16108,
						16109,
						16110,
						16111,
						16112,
						16113,
						16114,
						16115
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16302,
					"typeArguments": [
						{
							"type": "reference",
							"target": 16106,
							"name": "FilterableTaxRateProps",
							"package": "@srinivasulu-narayanam/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16159,
			"name": "TaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax region details."
					}
				]
			},
			"children": [
				{
					"id": 16160,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16161,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16162,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16163,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region's parent tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16164,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16165,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16166,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16167,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax region. For example, the ID of the user\nthat created the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16168,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16160,
						16161,
						16162,
						16163,
						16164,
						16165,
						16166,
						16167,
						16168
					]
				}
			]
		},
		{
			"id": 16173,
			"name": "FilterableTaxRegionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax regions."
					}
				]
			},
			"children": [
				{
					"id": 16183,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16173,
									"name": "FilterableTaxRegionProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16173,
											"name": "FilterableTaxRegionProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16303,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 16184,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16173,
									"name": "FilterableTaxRegionProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16173,
											"name": "FilterableTaxRegionProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16304,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 16174,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find tax regions based on currency and province codes through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16175,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the tax regions by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 16176,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their country code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16177,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their province code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16178,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by the ID of their parent tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16179,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their metadata."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 16180,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16181,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16182,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16183,
						16184,
						16174,
						16175,
						16176,
						16177,
						16178,
						16179,
						16180,
						16181,
						16182
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16302,
					"typeArguments": [
						{
							"type": "reference",
							"target": 16173,
							"name": "FilterableTaxRegionProps",
							"package": "@srinivasulu-narayanam/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16191,
			"name": "TaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate rule details."
					}
				]
			},
			"children": [
				{
					"id": 16192,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16193,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The snake-case name of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`product`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#override-tax-rates-with-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16194,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the record of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`prod_123`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#override-tax-rates-with-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16195,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16196,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16080,
						"name": "TaxRateDTO",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16197,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16198,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16199,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16200,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate rule. For example, the ID of the user\nthat created the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16192,
						16193,
						16194,
						16195,
						16196,
						16197,
						16198,
						16199,
						16200
					]
				}
			]
		},
		{
			"id": 16201,
			"name": "FilterableTaxRateRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax rate rules."
					}
				]
			},
			"children": [
				{
					"id": 16210,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16201,
									"name": "FilterableTaxRateRuleProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16201,
											"name": "FilterableTaxRateRuleProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16303,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 16211,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16201,
									"name": "FilterableTaxRateRuleProps",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "reference",
									"target": 16302,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16201,
											"name": "FilterableTaxRateRuleProps",
											"package": "@srinivasulu-narayanam/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@srinivasulu-narayanam/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16304,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 16202,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by what it references."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16203,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by the ID of the record it references."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16204,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by the ID of their associated tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				},
				{
					"id": 16205,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by their associated tax rate."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16106,
						"name": "FilterableTaxRateProps",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16206,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by what its metadata."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 16207,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by its creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16208,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by its update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16306,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16209,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 16306,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@srinivasulu-narayanam/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16210,
						16211,
						16202,
						16203,
						16204,
						16205,
						16206,
						16207,
						16208,
						16209
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16302,
					"typeArguments": [
						{
							"type": "reference",
							"target": 16201,
							"name": "FilterableTaxRateRuleProps",
							"package": "@srinivasulu-narayanam/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16212,
			"name": "TaxableItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The taxable item details."
					}
				]
			},
			"children": [
				{
					"id": 16213,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the taxable item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16214,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16215,
					"name": "product_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the type of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16216,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the taxable item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16329,
						"name": "BigNumberInput",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16217,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the taxable item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16329,
						"name": "BigNumberInput",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16218,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the taxable item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16213,
						16214,
						16215,
						16216,
						16217,
						16218
					]
				}
			]
		},
		{
			"id": 16219,
			"name": "TaxableShippingDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The taxable shipping details."
					}
				]
			},
			"children": [
				{
					"id": 16220,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16221,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16222,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16329,
						"name": "BigNumberInput",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16223,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16220,
						16221,
						16222,
						16223
					]
				}
			]
		},
		{
			"id": 16224,
			"name": "TaxCalculationContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context provided when tax lines are calculated and retrieved. This\ncontext is later passed to the underlying tax provider."
					}
				]
			},
			"children": [
				{
					"id": 16225,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's address"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16226,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16227,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ISO 2 character currency code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16228,
									"name": "province_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province code."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 16229,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16230,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the address"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 16231,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16232,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16233,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address metadata."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16227,
										16228,
										16229,
										16230,
										16231,
										16232,
										16233
									]
								}
							]
						}
					}
				},
				{
					"id": 16234,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's details."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16235,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16236,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the customer."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16237,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The email of the customer."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16238,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The groups that the customer belongs to."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16239,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Customer metadata."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16236,
										16237,
										16238,
										16239
									]
								}
							]
						}
					}
				},
				{
					"id": 16240,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax lines are calculated for an order return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16225,
						16234,
						16240
					]
				}
			]
		},
		{
			"id": 16330,
			"name": "TaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line details."
					}
				]
			},
			"children": [
				{
					"id": 16331,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16332,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16333,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16334,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16335,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16331,
						16332,
						16333,
						16334,
						16335
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 16241,
					"name": "ItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 16248,
					"name": "ShippingTaxLineDTO"
				}
			]
		},
		{
			"id": 16241,
			"name": "ItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The item tax line details."
					}
				]
			},
			"children": [
				{
					"id": 16243,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16331,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 16244,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16332,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 16245,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16333,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 16246,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16334,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 16247,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16335,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 16242,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16243,
						16244,
						16245,
						16246,
						16247,
						16242
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16330,
					"name": "TaxLineDTO",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16248,
			"name": "ShippingTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping tax line details."
					}
				]
			},
			"children": [
				{
					"id": 16250,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16331,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 16251,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16332,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 16252,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16333,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 16253,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16334,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 16254,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16335,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 16249,
					"name": "shipping_line_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping line's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16250,
						16251,
						16252,
						16253,
						16254,
						16249
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16330,
					"name": "TaxLineDTO",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16118,
			"name": "CreateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate to be created."
					}
				]
			},
			"children": [
				{
					"id": 16119,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16120,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16121,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16122,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16123,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 16185,
									"name": "CreateTaxRateRuleDTO",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 16124,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16125,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the ID of the user\nthat created the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16126,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16119,
						16120,
						16121,
						16122,
						16123,
						16124,
						16125,
						16126
					]
				}
			]
		},
		{
			"id": 16136,
			"name": "UpsertTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the tax rate to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 16137,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate. If not provided, the tax rate\nis created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16138,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16139,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16140,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16141,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16142,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the\nID of the user that created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16143,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16137,
						16138,
						16139,
						16140,
						16141,
						16142,
						16143
					]
				}
			]
		},
		{
			"id": 16127,
			"name": "UpdateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 16128,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16129,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16130,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16131,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 16185,
									"name": "CreateTaxRateRuleDTO",
									"package": "@srinivasulu-narayanam/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 16132,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16133,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is combinable.\n\nLearn more [here](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#combinable-tax-rates)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16134,
					"name": "updated_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16135,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16128,
						16129,
						16130,
						16131,
						16132,
						16133,
						16134,
						16135
					]
				}
			]
		},
		{
			"id": 16147,
			"name": "CreateTaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax region to be created."
					}
				]
			},
			"children": [
				{
					"id": 16148,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character country code of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16149,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16150,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region's parent."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16151,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16152,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax region. For example, the ID of\nthe user that created the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16153,
					"name": "default_tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default tax rate of the tax region."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16154,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16155,
									"name": "rate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rate to charge."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n10\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 16156,
									"name": "code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The code of the tax rate."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 16157,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the tax rate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16158,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16328,
										"name": "MetadataType",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16155,
										16156,
										16157,
										16158
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16148,
						16149,
						16150,
						16151,
						16152,
						16153
					]
				}
			]
		},
		{
			"id": 16169,
			"name": "UpdateTaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax region to be updated."
					}
				]
			},
			"children": [
				{
					"id": 16170,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the tax region to update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16171,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16172,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16170,
						16171,
						16172
					]
				}
			]
		},
		{
			"id": 16185,
			"name": "CreateTaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate rule to be created."
					}
				]
			},
			"children": [
				{
					"id": 16186,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The snake-case name of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`product`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#override-tax-rates-with-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16187,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the record of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`prod_123`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/resources/commerce-modules/tax/tax-rates-and-rules#override-tax-rates-with-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16188,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16189,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16328,
						"name": "MetadataType",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16190,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate rule. For example, the ID of the\nuser that created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16186,
						16187,
						16188,
						16189,
						16190
					]
				}
			]
		},
		{
			"id": 15907,
			"name": "ITaxModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Tax Module."
					}
				]
			},
			"children": [
				{
					"id": 15908,
					"name": "retrieveTaxRate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15909,
							"name": "retrieveTaxRate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a tax by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved tax."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a tax rate by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.retrieveTaxRate(\"txr_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.retrieveTaxRate(\"txr_123\", {\n  relations: [\"tax_region\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15910,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15911,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16070,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16080,
												"name": "TaxRateDTO",
												"package": "@srinivasulu-narayanam/types"
											}
										],
										"name": "FindConfig",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15912,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16080,
										"name": "TaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15913,
					"name": "listTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15914,
							"name": "listTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rates based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rates using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.listTaxRates({\n  id: [\"txr_123\", \"txr_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.listTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.listTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15915,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rates."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16106,
										"name": "FilterableTaxRateProps",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15916,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16070,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16080,
												"name": "TaxRateDTO",
												"package": "@srinivasulu-narayanam/types"
											}
										],
										"name": "FindConfig",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15917,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16080,
											"name": "TaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15918,
					"name": "listAndCountTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15919,
							"name": "listAndCountTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rates along with the total count of available tax rates satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rates along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rates using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCountTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCountTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCountTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15920,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rates."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16106,
										"name": "FilterableTaxRateProps",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15921,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16070,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16080,
												"name": "TaxRateDTO",
												"package": "@srinivasulu-narayanam/types"
											}
										],
										"name": "FindConfig",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15922,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16080,
													"name": "TaxRateDTO",
													"package": "@srinivasulu-narayanam/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15923,
					"name": "createTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15924,
							"name": "createTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax rates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.createTaxRates([\n  {\n    tax_region_id: \"txreg_123\",\n    name: \"Default rate\",\n    rate: 10,\n  },\n  {\n    tax_region_id: \"txreg_123\",\n    name: \"Custom rate\",\n    rate: 15,\n    rules: [\n      {\n        reference: \"product_type\",\n        reference_id: \"ptyp_1\",\n      },\n      {\n        reference: \"product\",\n        reference_id: \"prod_123\",\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15925,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rates to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16118,
											"name": "CreateTaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 15926,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16080,
											"name": "TaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15927,
							"name": "createTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax rate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.createTaxRates({\n  tax_region_id: \"txreg_123\",\n  name: \"Default rate\",\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15928,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16118,
										"name": "CreateTaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15929,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16080,
										"name": "TaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15930,
					"name": "updateTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15931,
							"name": "updateTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing tax rate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.updateTaxRates(\"txr_123\", {\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15932,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15933,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16127,
										"name": "UpdateTaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15934,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16080,
										"name": "TaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15935,
							"name": "updateTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tax rates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.updateTaxRates(\n  [\"txr_123\", \"txr_321\"],\n  {\n    rate: 10,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15936,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of tax rates to update."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15937,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16127,
										"name": "UpdateTaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15938,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16080,
											"name": "TaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15939,
							"name": "updateTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tax rates matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.updateTaxRates(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    rate: 10,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15940,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which tax rates to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16106,
										"name": "FilterableTaxRateProps",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15941,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16127,
										"name": "UpdateTaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15942,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16080,
											"name": "TaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15943,
					"name": "upsertTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15944,
							"name": "upsertTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a tax rate if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.upsertTaxRates({\n  id: \"txr_123\",\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15945,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the tax rate to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16136,
										"name": "UpsertTaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15946,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16080,
										"name": "TaxRateDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15947,
							"name": "upsertTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates tax rates if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.upsertTaxRates([\n  {\n    id: \"txr_123\",\n    rate: 10,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15948,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the tax rates to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16136,
											"name": "UpsertTaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 15949,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16080,
											"name": "TaxRateDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15950,
					"name": "deleteTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15951,
							"name": "deleteTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax rates by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rates are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRates([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15952,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of tax rates to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15953,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15954,
							"name": "deleteTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax rate by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRates(\"txr_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15955,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15956,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15957,
					"name": "restoreTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15958,
							"name": "restoreTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax rates by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated rules.\nThe object's keys are the ID attribute names of the tax rate entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`rule_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the tax rate through this relation,\nsuch as the IDs of associated rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restoreTaxRates([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 15959,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 15960,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rates."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15961,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax rate's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16144,
										"typeArguments": [
											{
												"type": "reference",
												"target": 15959,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15962,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15963,
					"name": "createTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15964,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegion = await taxModuleService.createTaxRegions({\n  country_code: \"us\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15965,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax region to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16147,
										"name": "CreateTaxRegionDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15966,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16159,
										"name": "TaxRegionDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15967,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax regions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.createTaxRegions([\n  {\n    country_code: \"us\",\n  },\n  {\n    country_code: \"gb\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15968,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax regions to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16147,
											"name": "CreateTaxRegionDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 15969,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16159,
											"name": "TaxRegionDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15970,
					"name": "updateTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15971,
							"name": "updateTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates a tax region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegion = await taxModule.updateTaxRegions({\n  province_code: \"be\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15972,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax region to be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16169,
										"name": "UpdateTaxRegionDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15973,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16159,
										"name": "TaxRegionDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15974,
							"name": "updateTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates tax regions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModule.updateTaxRegions([\n  {\n    id: \"tx-1\",\n    province_code: \"be\",\n  },\n  {\n    id: \"tx-2\",\n    province_code: \"ca\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15975,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax regions to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16169,
											"name": "UpdateTaxRegionDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 15976,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16159,
											"name": "TaxRegionDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15977,
					"name": "deleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15978,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax regions are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15979,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 15980,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15981,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax region by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax region is successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRegions(\"txreg_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15982,
									"name": "taxRegionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax region's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15983,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15984,
					"name": "listTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15985,
							"name": "listTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax regions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax regions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions({\n  id: [\"txreg_123\", \"txreg_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax region:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions(\n  {\n    id: [\"txreg_123\", \"txreg_321\"],\n  },\n  {\n    relations: [\"tax_rates\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions(\n  {\n    id: [\"txreg_123\", \"txreg_321\"],\n  },\n  {\n    relations: [\"tax_rates\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15986,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax regions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16173,
										"name": "FilterableTaxRegionProps",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15987,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax region is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16070,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16159,
												"name": "TaxRegionDTO",
												"package": "@srinivasulu-narayanam/types"
											}
										],
										"name": "FindConfig",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15988,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16159,
											"name": "TaxRegionDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15989,
					"name": "createTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15990,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax rate rule."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRule = await taxModuleService.createTaxRateRules(\n  {\n    reference: \"product_type\",\n    reference_id: \"ptyp_123\",\n    tax_rate_id: \"txr_123\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15991,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rule to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16185,
										"name": "CreateTaxRateRuleDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 15992,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 16191,
										"name": "TaxRateRuleDTO",
										"package": "@srinivasulu-narayanam/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 15993,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax rate rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules =\n  await taxModuleService.createTaxRateRules([\n    {\n      reference: \"product_type\",\n      reference_id: \"ptyp_123\",\n      tax_rate_id: \"txr_123\",\n    },\n    {\n      reference: \"product\",\n      reference_id: \"prod_123\",\n      tax_rate_id: \"txr_321\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15994,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rules to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16185,
											"name": "CreateTaxRateRuleDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								},
								{
									"id": 15995,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16191,
											"name": "TaxRateRuleDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 15996,
					"name": "deleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 15997,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax rate rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate rule is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRateRules(\"txrule_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15998,
									"name": "taxRateRuleId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rule's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15999,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 16000,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate rules are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16001,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16002,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16003,
					"name": "listTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16004,
							"name": "listTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rate rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rate rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rate rules using their associated tax rate's ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules({\n  tax_rate_id: [\"txr_123\", \"txr_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules(\n  {\n    tax_rate_id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_rate\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules(\n  {\n    tax_rate_id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_rate\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16005,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rate rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16201,
										"name": "FilterableTaxRateRuleProps",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16006,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16070,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16191,
												"name": "TaxRateRuleDTO",
												"package": "@srinivasulu-narayanam/types"
											}
										],
										"name": "FindConfig",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16007,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 16191,
											"name": "TaxRateRuleDTO",
											"package": "@srinivasulu-narayanam/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16008,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16009,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves tax lines for taxable items and shipping methods in a cart.\n\nLearn more in [this guide](https://docs.medusajs.com/resources/commerce-modules/tax/tax-calculation-with-provider)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The item and shipping methods' tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxLines = await taxModuleService.getTaxLines(\n  [\n    {\n      id: \"cali_123\",\n      product_id: \"prod_123\",\n      unit_price: 1000,\n      quantity: 1,\n    },\n    {\n      id: \"casm_123\",\n      shipping_option_id: \"so_123\",\n      unit_price: 2000,\n    },\n  ],\n  {\n    address: {\n      country_code: \"us\",\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16010,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The items and shipping methods to retrieve their tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 16212,
													"name": "TaxableItemDTO",
													"package": "@srinivasulu-narayanam/types"
												},
												{
													"type": "reference",
													"target": 16219,
													"name": "TaxableShippingDTO",
													"package": "@srinivasulu-narayanam/types"
												}
											]
										}
									}
								},
								{
									"id": 16011,
									"name": "calculationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context to pass to the underlying tax provider. It provides more\ndetails that are useful to provide accurate tax lines."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16224,
										"name": "TaxCalculationContext",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16012,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 16241,
													"name": "ItemTaxLineDTO",
													"package": "@srinivasulu-narayanam/types"
												},
												{
													"type": "reference",
													"target": 16248,
													"name": "ShippingTaxLineDTO",
													"package": "@srinivasulu-narayanam/types"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16013,
					"name": "softDeleteTaxRates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16014,
							"name": "softDeleteTaxRates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax raes by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated rules.\nThe object's keys are the ID attribute names of the tax rate entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the tax rate through this relation, such as the IDs of associated rules.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDeleteTaxRates([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 16015,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 16016,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rates."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16017,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16015,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16018,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16019,
					"name": "softDeleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16020,
							"name": "softDeleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated tax rates.\nThe object's keys are the ID attribute names of the tax region entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rate_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the tax region through this relation, such as the IDs of associated tax rates.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDeleteTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 16021,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 16022,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16023,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16021,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16024,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16025,
					"name": "restoreTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16026,
							"name": "restoreTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated tax rates.\nThe object's keys are the ID attribute names of the tax region entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rate_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the tax region through this relation,\nsuch as the IDs of associated tax rates.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restoreTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 16027,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 16028,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16029,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax region's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rates`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16144,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16027,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16030,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16031,
					"name": "softDeleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16032,
							"name": "softDeleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDeleteTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 16033,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 16034,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rate rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16035,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16033,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16036,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16037,
					"name": "restoreTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16038,
							"name": "restoreTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restoreTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 16039,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 16040,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rate rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 16041,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax rate rule's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16144,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16039,
												"name": "TReturnableLinkableKeys",
												"package": "@srinivasulu-narayanam/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@srinivasulu-narayanam/types"
									}
								},
								{
									"id": 16042,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16093,
										"name": "Context",
										"package": "@srinivasulu-narayanam/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						15908,
						15913,
						15918,
						15923,
						15930,
						15943,
						15950,
						15957,
						15963,
						15970,
						15977,
						15984,
						15989,
						15996,
						16003,
						16008,
						16013,
						16019,
						16025,
						16031,
						16037
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16056,
					"name": "IModuleService",
					"package": "@srinivasulu-narayanam/types"
				}
			]
		},
		{
			"id": 16390,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16391,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16392,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 16385,
						"name": "BigNumberRawValue",
						"package": "@srinivasulu-narayanam/types"
					}
				},
				{
					"id": 16393,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 16394,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16395,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 16396,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16397,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16391,
						16392,
						16393
					]
				},
				{
					"title": "Methods",
					"children": [
						16394,
						16396
					]
				}
			]
		},
		{
			"id": 16385,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16386,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16387,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16387
							]
						}
					],
					"indexSignatures": [
						{
							"id": 16388,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 16389,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 16329,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 16385,
						"name": "BigNumberRawValue",
						"package": "@srinivasulu-narayanam/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 16390,
						"name": "IBigNumber",
						"package": "@srinivasulu-narayanam/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				16070,
				16302,
				16255,
				16144,
				16398,
				16336,
				16056,
				16364,
				16288,
				16093,
				16080,
				16106,
				16159,
				16173,
				16191,
				16201,
				16212,
				16219,
				16224,
				16330,
				16241,
				16248,
				16118,
				16136,
				16127,
				16147,
				16169,
				16185,
				15907,
				16390
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				16283,
				16328,
				16381,
				16383,
				16418,
				16456,
				16446,
				16306,
				16443,
				16425,
				16445,
				16437,
				16422,
				16427,
				16412,
				16360,
				16371,
				16402,
				16430,
				16354,
				16258,
				16351,
				16385,
				16329
			]
		}
	],
	"packageName": "@srinivasulu-narayanam/types",
	"symbolIdMap": {
		"15906": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": ""
		},
		"15907": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService"
		},
		"15908": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieveTaxRate"
		},
		"15909": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieveTaxRate"
		},
		"15910": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"15911": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"15912": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15913": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRates"
		},
		"15914": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRates"
		},
		"15915": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"15916": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"15917": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15918": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCountTaxRates"
		},
		"15919": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCountTaxRates"
		},
		"15920": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"15921": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"15922": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15923": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRates"
		},
		"15924": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRates"
		},
		"15925": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15926": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15927": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRates"
		},
		"15928": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15929": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15930": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRates"
		},
		"15931": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRates"
		},
		"15932": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"15933": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15934": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15935": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRates"
		},
		"15936": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"15937": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15938": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15939": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRates"
		},
		"15940": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "selector"
		},
		"15941": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15942": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15943": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsertTaxRates"
		},
		"15944": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsertTaxRates"
		},
		"15945": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15946": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15947": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsertTaxRates"
		},
		"15948": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15949": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15950": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRates"
		},
		"15951": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRates"
		},
		"15952": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"15953": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15954": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRates"
		},
		"15955": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"15956": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15957": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRates"
		},
		"15958": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRates"
		},
		"15959": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"15960": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"15961": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"15962": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15963": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"15964": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"15965": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15966": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15967": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"15968": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15969": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15970": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRegions"
		},
		"15971": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRegions"
		},
		"15972": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15973": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15974": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.updateTaxRegions"
		},
		"15975": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15976": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15977": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"15978": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"15979": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"15980": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15981": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"15982": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRegionId"
		},
		"15983": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15984": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"15985": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"15986": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"15987": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"15988": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15989": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"15990": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"15991": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15992": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15993": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"15994": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"15995": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"15996": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"15997": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"15998": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleId"
		},
		"15999": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16000": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"16001": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"16002": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16003": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"16004": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"16005": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"16006": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16007": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16008": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"16009": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"16010": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "items"
		},
		"16011": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "calculationContext"
		},
		"16012": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16013": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRates"
		},
		"16014": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRates"
		},
		"16015": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16016": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"16017": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16018": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16019": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"16020": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"16021": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16022": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"16023": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16024": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16025": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"16026": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"16027": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16028": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"16029": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16030": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16031": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"16032": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"16033": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16034": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"16035": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16036": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16037": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"16038": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"16039": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16040": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"16041": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16042": {
			"sourceFileName": "../../../../packages/core/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"16056": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"16057": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"16058": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"16059": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"16060": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16061": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"16062": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16063": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16064": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"16065": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16066": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16067": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"16068": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16069": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16070": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"16071": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"16072": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"16073": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"16074": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"16075": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"16076": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"16077": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"16078": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"16079": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"16080": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO"
		},
		"16081": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.id"
		},
		"16082": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.rate"
		},
		"16083": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.code"
		},
		"16084": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.name"
		},
		"16085": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.metadata"
		},
		"16086": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.tax_region_id"
		},
		"16087": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_combinable"
		},
		"16088": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_default"
		},
		"16089": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_at"
		},
		"16090": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.updated_at"
		},
		"16091": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.deleted_at"
		},
		"16092": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_by"
		},
		"16093": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"16094": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"16095": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"16096": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"16097": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"16098": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"16099": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"16100": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"16101": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"16102": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"16103": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"16104": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"16105": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"16106": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps"
		},
		"16107": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.q"
		},
		"16108": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.id"
		},
		"16109": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.tax_region_id"
		},
		"16110": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.rate"
		},
		"16111": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.code"
		},
		"16112": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.name"
		},
		"16113": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_at"
		},
		"16114": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.updated_at"
		},
		"16115": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_by"
		},
		"16116": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16117": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16118": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO"
		},
		"16119": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.tax_region_id"
		},
		"16120": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rate"
		},
		"16121": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.code"
		},
		"16122": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.name"
		},
		"16123": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rules"
		},
		"16124": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.is_default"
		},
		"16125": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.created_by"
		},
		"16126": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.metadata"
		},
		"16127": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO"
		},
		"16128": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rate"
		},
		"16129": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.code"
		},
		"16130": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.name"
		},
		"16131": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rules"
		},
		"16132": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_default"
		},
		"16133": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_combinable"
		},
		"16134": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.updated_by"
		},
		"16135": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.metadata"
		},
		"16136": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO"
		},
		"16137": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.id"
		},
		"16138": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.rate"
		},
		"16139": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.code"
		},
		"16140": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.name"
		},
		"16141": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.is_default"
		},
		"16142": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.created_by"
		},
		"16143": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.metadata"
		},
		"16144": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"16145": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"16146": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16147": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO"
		},
		"16148": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.country_code"
		},
		"16149": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.province_code"
		},
		"16150": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.parent_id"
		},
		"16151": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.metadata"
		},
		"16152": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.created_by"
		},
		"16153": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.default_tax_rate"
		},
		"16154": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "__type"
		},
		"16155": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "__type.rate"
		},
		"16156": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "__type.code"
		},
		"16157": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"16158": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "__type.metadata"
		},
		"16159": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO"
		},
		"16160": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.id"
		},
		"16161": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.country_code"
		},
		"16162": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.province_code"
		},
		"16163": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.parent_id"
		},
		"16164": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.metadata"
		},
		"16165": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_at"
		},
		"16166": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.updated_at"
		},
		"16167": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_by"
		},
		"16168": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.deleted_at"
		},
		"16169": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRegionDTO"
		},
		"16170": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRegionDTO.id"
		},
		"16171": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRegionDTO.province_code"
		},
		"16172": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRegionDTO.metadata"
		},
		"16173": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps"
		},
		"16174": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.q"
		},
		"16175": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.id"
		},
		"16176": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.country_code"
		},
		"16177": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.province_code"
		},
		"16178": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.parent_id"
		},
		"16179": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.metadata"
		},
		"16180": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_at"
		},
		"16181": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.updated_at"
		},
		"16182": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_by"
		},
		"16183": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16184": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16185": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO"
		},
		"16186": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference"
		},
		"16187": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference_id"
		},
		"16188": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.tax_rate_id"
		},
		"16189": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.metadata"
		},
		"16190": {
			"sourceFileName": "../../../../packages/core/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.created_by"
		},
		"16191": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO"
		},
		"16192": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.id"
		},
		"16193": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference"
		},
		"16194": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference_id"
		},
		"16195": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate_id"
		},
		"16196": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate"
		},
		"16197": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.metadata"
		},
		"16198": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_at"
		},
		"16199": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.updated_at"
		},
		"16200": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_by"
		},
		"16201": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps"
		},
		"16202": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference"
		},
		"16203": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference_id"
		},
		"16204": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate_id"
		},
		"16205": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate"
		},
		"16206": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.metadata"
		},
		"16207": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_at"
		},
		"16208": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.updated_at"
		},
		"16209": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_by"
		},
		"16210": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16211": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16212": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO"
		},
		"16213": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.id"
		},
		"16214": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_id"
		},
		"16215": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type_id"
		},
		"16216": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.quantity"
		},
		"16217": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.unit_price"
		},
		"16218": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.currency_code"
		},
		"16219": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO"
		},
		"16220": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.id"
		},
		"16221": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.shipping_option_id"
		},
		"16222": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.unit_price"
		},
		"16223": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.currency_code"
		},
		"16224": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext"
		},
		"16225": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.address"
		},
		"16226": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"16227": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"16228": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.province_code"
		},
		"16229": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"16230": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"16231": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.city"
		},
		"16232": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"16233": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16234": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.customer"
		},
		"16235": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"16236": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.id"
		},
		"16237": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.email"
		},
		"16238": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"16239": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16240": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.is_return"
		},
		"16241": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO"
		},
		"16242": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO.line_item_id"
		},
		"16243": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"16244": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"16245": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"16246": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"16247": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"16248": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO"
		},
		"16249": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO.shipping_line_id"
		},
		"16250": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"16251": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"16252": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"16253": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"16254": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"16255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"16256": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"16257": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"16258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"16259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16260": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"16261": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"16262": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"16263": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16264": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16265": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"16266": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"16267": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16268": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"16269": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"16270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"16271": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"16272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"16274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"16275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"16276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"16277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"16278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"16279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"16281": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"16282": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"16283": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"16284": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"16285": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"16287": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"16288": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"16289": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"16290": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"16291": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"16292": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"16293": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"16294": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"16295": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"16296": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"16297": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"16298": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"16299": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"16300": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"16301": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"16302": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"16303": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"16304": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"16305": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"16306": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"16307": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16308": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"16309": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"16310": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"16311": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"16312": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"16313": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"16314": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"16315": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"16316": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"16317": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"16318": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"16319": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"16320": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"16321": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"16322": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"16323": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"16324": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"16325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"16326": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"16327": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16328": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"16329": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"16330": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"16331": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"16332": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"16333": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"16334": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"16335": {
			"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"16336": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"16337": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"16338": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"16339": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"16340": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"16341": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"16342": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"16343": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"16344": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"16345": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"16346": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"16347": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16348": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"16349": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"16350": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"16351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"16352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16353": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"16354": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"16355": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16356": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"16357": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"16358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"16359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"16360": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"16361": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"16362": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"16363": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"16364": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"16365": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"16366": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"16367": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"16368": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"16370": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"16371": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"16372": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"16373": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"16374": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"16375": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"16376": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"16377": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"16378": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"16379": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"16380": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"16381": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"16382": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16383": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"16384": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16385": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"16386": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"16387": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"16388": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"16390": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"16391": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"16392": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"16393": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"16394": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"16395": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"16396": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"16397": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"16398": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"16399": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"16400": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"16401": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"16402": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"16403": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"16404": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"16405": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"16406": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"16407": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"16408": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"16409": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"16410": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"16411": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"16412": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"16413": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"16414": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"16415": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"16416": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"16417": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"16418": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"16419": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16420": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"16421": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"16422": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"16423": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16424": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"16425": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"16426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16427": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"16428": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"16429": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"16430": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"16431": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16432": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16433": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16434": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"16435": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"16436": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"16437": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"16438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16439": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"16441": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16442": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"16443": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"16444": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16445": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"16446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"16447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"16449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"16451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16452": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"16453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"16454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"16455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"16456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"16457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/tax/service.ts"
		},
		"reflections": {
			"1": 15906
		}
	}
}
